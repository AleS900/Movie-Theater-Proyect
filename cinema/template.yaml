
AWSTemplateFormatVersion : '2010-09-09'
Transform:
  - AWS::Serverless-2016-10-31

Description: My movie theater template
Resources:

  GetMovieInfo:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getMovieInfo
      Environment:
        Variables:
          USERS_TABLE: !Ref Cinema_Theater
      Handler: movies.getMovieInfo
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref Cinema_Theater
      Events:
        GetMovie:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/movie/{movie_id}"
            Method: GET

  PutMovieInfo:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putMovieInfo
      Environment:
        Variables:
          USERS_TABLE: !Ref Cinema_Theater
      Handler: movies.putMovieInfo
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref Cinema_Theater
      Events:
        PutMovie:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/movie/{movie_id}"
            Method: PUT
  
  GetMovieByRoom:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getMovieByRoom
      Environment:
        Variables:
          USERS_TABLE: !Ref Cinema_Theater
      Handler: movies.getMovieByRoom
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref Cinema_Theater
      Events:
        PutMovie:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/movie/{movie_id}/cinema_room/{cinema_room_id}"
            Method: GET

  GetCinemaRoomInfo:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getCinemaRoomInfo
      Environment:
        Variables:
          USERS_TABLE: !Ref Cinema_Theater
      Handler: movies.getCinemaRoomInfo
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref Cinema_Theater
      Events:
        GetMovie:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/cinema_room/{cinema_room_id}"
            Method: GET
            
    PutCinemaRoomInfo:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putMovieInfo
      Environment:
        Variables:
          USERS_TABLE: !Ref Cinema_Theater
      Handler: movies.putMovieInfo
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref Cinema_Theater
      Events:
        PutMovie:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/movie/{movie_id}"
            Method: PUT
            
  GetViewerInfo:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getViewerInfo
      Environment:
        Variables:
          USERS_TABLE: !Ref Cinema_Theater
      Handler: movies.getViewerInfo
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref Cinema_Theater
      Events:
        GetMovie:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/viewer/{viewer_id}"
            Method: GET
            
  GetDateInfo:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getDateInfo
      Environment:
        Variables:
          USERS_TABLE: !Ref Cinema_Theater
      Handler: movies.getDateInfo
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref Cinema_Theater
      Events:
        GetMovie:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/date/{date_id}"
            Method: GET

            
  MyAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: gateway-mt
      StageName: prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: swagger.yaml

  Cinema_Theater:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Cinema_Theater
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
  